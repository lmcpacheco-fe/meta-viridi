// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2022 NXP
 */

/dts-v1/;

#include <dt-bindings/usb/pd.h>
#include "imx93.dtsi"
#include "viridi-common.dtsi"

&ele_fw2 {
	memory-region = <&ele_reserved>;	// Link firmware region to reserved memory
};

/ {
	model = "NXP i.MX93 11X11 EVK board";
	compatible = "fsl,imx93-11x11-evk", "fsl,imx93";

	chosen {
		stdout-path = &lpuart1;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		linux,cma {						//Contiguous memory for DMA usage
			compatible = "shared-dma-pool";
			reusable;
			alloc-ranges = <0 0x80000000 0 0x40000000>;	//Available region: 1 GB
			size = <0 0x10000000>;				//CMA size = 256 MB
			linux,cma-default;
		};

		ethosu_mem: ethosu_region@C0000000 {
			compatible = "shared-dma-pool";
			reusable;
			reg = <0x0 0xC0000000 0x0 0x10000000>;	//256 MB reserved for Arm Ethos-U NPU
		};

		vdev0vring0: vdev0vring0@a4000000 {
			reg = <0 0xa4000000 0 0x8000>;		//Vring0 for RPMsg (aligned at 32 KB)
			no-map;					//Prevent normal kernel mapping
		};

		vdev0vring1: vdev0vring1@a4008000 {
			reg = <0 0xa4008000 0 0x8000>;		//Vring1 for RPMsg
			no-map;					//Prevent normal kernel mapping
		};

		vdev1vring0: vdev1vring0@a4010000 {
			reg = <0 0xa4010000 0 0x8000>;		//Second channel Vring0
			no-map;					//Prevent normal kernel mapping
		};

		vdev1vring1: vdev1vring1@a4018000 {
			reg = <0 0xa4018000 0 0x8000>;		//Second channel Vring1
			no-map;					//Prevent normal kernel mapping
		};

		rsc_table: rsc-table@2021e000 {
			reg = <0 0x2021e000 0 0x1000>;		//Resource table for CM33 remoteproc
			no-map;					//Prevent normal kernel mapping
		};

		vdevbuffer: vdevbuffer@a4020000 {
			compatible = "shared-dma-pool";
			reg = <0 0xa4020000 0 0x100000>;	//Shared buffer for RPMsg (1 MB)
			no-map;					//Prevent normal kernel mapping
		};

		ele_reserved: ele-reserved@a4120000 {
			compatible = "shared-dma-pool";		//Memory region reserved for EdgeLock Enclave (ELE)
			reg = <0 0xa4120000 0 0x100000>;
			no-map;					//Prevent normal kernel mapping
		};
	};

	ethosu {
		compatible = "arm,ethosu";		// Arm Ethos-U NPU Linked to Cortex-M33 processor
		fsl,cm33-proc = <&cm33>;
		memory-region = <&ethosu_mem>;
		power-domains = <&mlmix>;
	};

	backlight_lvds: backlight-lvds {
		compatible = "pwm-backlight";
		pwms = <&fxl6408 0 100000 0>;
		brightness-levels = <0 100>;
		num-interpolated-steps = <100>;
		default-brightness-level = <100>;
		enable-gpios = <&fxl6408 5 GPIO_ACTIVE_HIGH>;
		status = "disabled";
	};
};

&cm33 {						//Cortex-M33 (CM33)
	mbox-names = "tx", "rx", "rxdb";
	mboxes = <&mu1 0 1>,
		 <&mu1 1 1>,
		 <&mu1 3 1>;
	memory-region = <&vdevbuffer>, <&vdev0vring0>, <&vdev0vring1>,
			<&vdev1vring0>, <&vdev1vring1>, <&rsc_table>;
	fsl,startup-delay-ms = <500>;
	status = "okay";
};

&mu1 {						//Message Units (CPU ↔ CM33)
	status = "okay";
};

&mu2 {						//Message Units (CPU ↔ CM33)
	status = "okay";
};

&epxp {						//Expansion port
	status = "okay";
};

&dsi {
	status = "okay";
	ports {
		port@1 {
			reg = <1>;
			dsi_to_adv7535: endpoint {
				remote-endpoint = <&adv7535_to_dsi>;
			};
		};
	};
};

&dphy {
	status = "okay";
};

&dphy_rx {
	status = "okay";
};

&lcdif {
	status = "okay";
	assigned-clock-rates = <445333333>, <148444444>, <400000000>, <133333333>;
};

&media_blk_ctrl {
	status = "okay";
};

&lpi2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpi2c1>;
	status = "okay";

	/*RTC --> PCF2131TFY*/
	pcf2131: pcf2131@51 {
		compatible = "nxp,pcf2131";
		reg = <0x51>;				//I2C Address (7bit) 0x51 expander --> 0xa3 (8bit)
		status = "okay";
		interrupt-parent = <&gpio3>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;	//GPIO3_IO07 --> CPU
	};

	/*Io Expander --> FXL6408UMX*/
	fxl6408: io-expander@44 {
		compatible = "nxp,fxl6408";
		reg = <0x44>;				//I2C Address (7bit) 0x44 expander
		vdd-supply = <&buck4>;			//buck4 --> 3v3
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;				//PCA9555 have 8 GPIOs
		gpio-reserved-ranges = <5 1>;		//Reserv DSP_CTRL_3V3 always
		#pwm-cells = <3>;
		gpio-line-names = "LED1_nEN", "LED2_nEN", "LED3_nEN", "LED4_nEN",
			"DSP_EN_3V3", "DSP_CTRL_3V3", "NC", "NC";
	};

	/*MIPI --> DSI*/
	adv7535: dtsi@3d {
		compatible = "adi,adv7535";
		reg = <0x3d>;
		adi,addr-cec = <0x3b>;
		adi,dsi-lanes = <4>;
		status = "okay";
		// The interrupt will be handled from GPIO4 of the IO Expander.
		// The thing is, I don’t know how the SoC will detect the interrupt if no GPIO is connected.
		interrupt-parent = <&fxl6408>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;	//DSI_EN_3V3 GPIO4 of the IO Expander acts as init when the screen is touched
		port {
			adv7535_to_dsi: endpoint {
				remote-endpoint = <&dsi_to_adv7535>;
			};
		};
	};
};

&lpi2c2 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_lpi2c2>;
	pinctrl-1 = <&pinctrl_lpi2c2>;
	status = "okay";

	/*PMIC --> PCA9451AHNY*/
	pmic@25 {
		compatible = "nxp,pca9451a";
		reg = <0x25>;
		interrupt-parent = <&gpio1>;
		interrupts = <10 IRQ_TYPE_EDGE_FALLING>;	//PMIC interrupt on GPIO1_IO10
		regulators {
			buck1: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <610000>;
				regulator-max-microvolt = <950000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck2: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <670000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck4: BUCK4{
				regulator-name = "BUCK4";
				regulator-min-microvolt = <1620000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5: BUCK5{
				regulator-name = "BUCK5";
				regulator-min-microvolt = <1620000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <1060000>;
				regulator-max-microvolt = <1140000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1620000>;
				regulator-max-microvolt = <1980000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <840000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5: LDO5 {
				regulator-name = "LDO5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};
};

&lpi2c5 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpi2c5>;
	status = "okay";

	/*Io Expander --> PCA9555AHF,128*/
	pca9555_20: gpio@20 {
		compatible = "nxp,pca9555";
		reg = <0x20>;				//I2C Address (7bit) 0x20 expander
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-parent = <&gpio1>;
		interrupts = <8 IRQ_TYPE_LEVEL_LOW>;	//Io Expander interrupt on GPIO1_IO08
		gpio-line-names = "CONA_EN", "CONB_EN",
			"DIGITAL_IN0", "DIGITAL_IN1","DIGITAL_IN2", "DIGITAL_IN3",
			"OUT0_EN", "OUT1_EN", "OUT2_EN", "OUT3_EN";
	};

	/*Io Expander --> PCA9555AHF,128*/
	pca9555_21: gpio@21 {
		compatible = "nxp,pca9555";
		reg = <0x21>;				//I2C Address (7bit) 0x21 expander
		#gpio-cells = <2>;
		gpio-controller;
		interrupt-parent = <&gpio1>;
		interrupts = <9 IRQ_TYPE_LEVEL_LOW>;	//Io Expander interrupt on GPIO1_IO09
		gpio-line-names = "EXP_IO1", "EXP_IO2",
			"EXP_IO3", "EXP_IO4", "EXP_PWR_EN",
			"WF_nEN_1V8", "WF_nRST_1V8", "BT_nRST_1V8",
			"GNSS_LNA_EN1", "LTE_ON_OFF_1V8",
			"NC", "NC", "NC", "NC", "NC", "NC";
	};
};

&iomuxc {
	pinctrl_eqos: eqosgrp {
		fsl,pins = <
			MX93_PAD_ENET1_MDC__ENET_QOS_MDC				0x57e
			MX93_PAD_ENET1_MDIO__ENET_QOS_MDIO				0x57e
			MX93_PAD_ENET1_RD0__ENET_QOS_RGMII_RD0				0x57e
			MX93_PAD_ENET1_RD1__ENET_QOS_RGMII_RD1				0x57e
			MX93_PAD_ENET1_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK		0x58e
			MX93_PAD_ENET1_RX_CTL__ENET_QOS_RGMII_RX_CTL			0x57e
			MX93_PAD_ENET1_TD0__ENET_QOS_RGMII_TD0				0x57e
			MX93_PAD_ENET1_TD1__ENET_QOS_RGMII_TD1				0x57e
			MX93_PAD_ENET1_TX_CTL__ENET_QOS_RGMII_TX_CTL			0x57e
		>;
	};

	pinctrl_eqos_sleep: eqosgrpsleep {
		fsl,pins = <
			MX93_PAD_ENET1_MDC__GPIO4_IO00			0x31e
			MX93_PAD_ENET1_MDIO__GPIO4_IO01			0x31e
			MX93_PAD_ENET1_RD0__GPIO4_IO10			0x31e
			MX93_PAD_ENET1_RD1__GPIO4_IO11			0x31e
			MX93_PAD_ENET1_RXC__GPIO4_IO09			0x31e
			MX93_PAD_ENET1_RX_CTL__GPIO4_IO08		0x31e
			MX93_PAD_ENET1_TD0__GPIO4_IO05			0x31e
			MX93_PAD_ENET1_TD1__GPIO4_IO04			0x31e
			MX93_PAD_ENET1_TX_CTL__GPIO4_IO06		0x31e
		>;
	};

	pinctrl_fec: fecgrp {
		fsl,pins = <
			MX93_PAD_ENET2_MDC__ENET1_MDC			0x57e
			MX93_PAD_ENET2_MDIO__ENET1_MDIO			0x57e
			MX93_PAD_ENET2_RD0__ENET1_RGMII_RD0		0x57e
			MX93_PAD_ENET2_RD1__ENET1_RGMII_RD1		0x57e
			MX93_PAD_ENET2_RXC__ENET1_RGMII_RXC		0x58e
			MX93_PAD_ENET2_RX_CTL__ENET1_RGMII_RX_CTL	0x57e
			MX93_PAD_ENET2_TD0__ENET1_RGMII_TD0		0x57e
			MX93_PAD_ENET2_TD1__ENET1_RGMII_TD1		0x57e
			MX93_PAD_ENET2_TX_CTL__ENET1_RGMII_TX_CTL	0x57e
		>;
	};

	pinctrl_fec_sleep: fecsleepgrp {
		fsl,pins = <
			MX93_PAD_ENET2_MDC__GPIO4_IO14			0x51e
			MX93_PAD_ENET2_MDIO__GPIO4_IO15			0x51e
			MX93_PAD_ENET2_RD0__GPIO4_IO24			0x51e
			MX93_PAD_ENET2_RD1__GPIO4_IO25			0x51e
			MX93_PAD_ENET2_RXC__GPIO4_IO23			0x51e
			MX93_PAD_ENET2_RX_CTL__GPIO4_IO22		0x51e
			MX93_PAD_ENET2_TD0__GPIO4_IO19			0x51e
			MX93_PAD_ENET2_TD1__GPIO4_IO18			0x51e
			MX93_PAD_ENET2_TX_CTL__GPIO4_IO20		0x51e
		>;
	};

	pinctrl_lpi2c1: lpi2c1grp {
		fsl,pins = <
			MX93_PAD_I2C1_SCL__LPI2C1_SCL			0x40000b9e
			MX93_PAD_I2C1_SDA__LPI2C1_SDA			0x40000b9e
		>;
	};

	pinctrl_lpi2c2: lpi2c2grp {
		fsl,pins = <
			MX93_PAD_I2C2_SCL__LPI2C2_SCL			0x40000b9e
			MX93_PAD_I2C2_SDA__LPI2C2_SDA			0x40000b9e
		>;
	};

	pinctrl_lpi2c5: lpi2c5grp {
		fsl,pins = <
			MX93_PAD_GPIO_IO22__LPI2C5_SDA			0x40000b9e
			MX93_PAD_GPIO_IO23__LPI2C5_SCL			0x40000b9e
		>;
	};

	pinctrl_lpspi4: lpspi4grp {
		fsl,pins = <
			MX93_PAD_GPIO_IO18__LPSPI4_PCS0			0x43		//CS0 (chip select)
			MX93_PAD_GPIO_IO19__LPSPI4_SIN			0x43
			MX93_PAD_GPIO_IO20__LPSPI4_SOUT			0x43
			MX93_PAD_GPIO_IO21__LPSPI4_SCK			0x43
		>;
	};

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			MX93_PAD_SAI1_TXD0__CAN1_TX			0x139e
			MX93_PAD_SAI1_TXC__CAN1_RX			0x139e
			MX93_PAD_SAI1_RXD0__GPIO1_IO14			0x139e		//CAN1_STBY
			MX93_PAD_SAI1_TXFS__GPIO1_IO11			0x139e		//CAN1_EOL
		>;
	};

	pinctrl_flexcan2: flexcan2grp {
		fsl,pins = <
			MX93_PAD_SD2_DATA0__CAN2_TX			0x139e
			MX93_PAD_SD2_DATA1__CAN2_RX			0x139e
			MX93_PAD_SD2_CMD__GPIO3_IO02			0x139e		//CAN2_STBY
			MX93_PAD_SD2_CLK__GPIO3_IO01			0x139e		//CAN2_EOL
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX93_PAD_UART1_RXD__LPUART1_RX			0x31e
			MX93_PAD_UART1_TXD__LPUART1_TX			0x31e
		>;
	};

	pinctrl_uart3: uart3_pins {
		fsl,pins = <
			MX93_PAD_GPIO_IO14__LPUART3_TX			0x31e
			MX93_PAD_GPIO_IO15__LPUART3_RX			0x31e
			MX93_PAD_GPIO_IO16__LPUART3_CTS_B		0x31e
			MX93_PAD_GPIO_IO17__LPUART3_RTS_B		0x31e
		>;
	};

	pinctrl_uart5: uart5grp {
		fsl,pins = <
			MX93_PAD_DAP_TDO_TRACESWO__LPUART5_TX		0x31e
			MX93_PAD_DAP_TDI__LPUART5_RX			0x31e
			MX93_PAD_DAP_TMS_SWDIO__LPUART5_RTS_B		0x31e
			MX93_PAD_DAP_TCLK_SWCLK__LPUART5_CTS_B		0x31e
		>;
	};

	pinctrl_uart6: uart6grp {
		fsl,pins = <
			MX93_PAD_GPIO_IO04__LPUART6_TX			0x31e
			MX93_PAD_GPIO_IO05__LPUART6_RX			0x31e
			MX93_PAD_GPIO_IO06__LPUART6_CTS_B		0x31e
			MX93_PAD_GPIO_IO07__LPUART6_RTS_B		0x31e
		>;
	};

	pinctrl_uart7: uart7grp {
		fsl,pins = <
			MX93_PAD_GPIO_IO08__LPUART7_TX			0x31e
			MX93_PAD_GPIO_IO09__LPUART7_RX			0x31e
			MX93_PAD_GPIO_IO10__LPUART7_CTS_B		0x31e
			MX93_PAD_GPIO_IO11__LPUART7_RTS_B		0x31e
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX93_PAD_SD1_CLK__USDHC1_CLK		0x1582
			MX93_PAD_SD1_CMD__USDHC1_CMD		0x40001382
			MX93_PAD_SD1_DATA0__USDHC1_DATA0	0x40001382
			MX93_PAD_SD1_DATA1__USDHC1_DATA1	0x40001382
			MX93_PAD_SD1_DATA2__USDHC1_DATA2	0x40001382
			MX93_PAD_SD1_DATA3__USDHC1_DATA3	0x40001382
			MX93_PAD_SD1_DATA4__USDHC1_DATA4	0x40001382
			MX93_PAD_SD1_DATA5__USDHC1_DATA5	0x40001382
			MX93_PAD_SD1_DATA6__USDHC1_DATA6	0x40001382
			MX93_PAD_SD1_DATA7__USDHC1_DATA7	0x40001382
			MX93_PAD_SD1_STROBE__USDHC1_STROBE	0x1582
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1-100mhzgrp {
		fsl,pins = <
			MX93_PAD_SD1_CLK__USDHC1_CLK		0x158e
			MX93_PAD_SD1_CMD__USDHC1_CMD		0x4000138e
			MX93_PAD_SD1_DATA0__USDHC1_DATA0	0x4000138e
			MX93_PAD_SD1_DATA1__USDHC1_DATA1	0x4000138e
			MX93_PAD_SD1_DATA2__USDHC1_DATA2	0x4000138e
			MX93_PAD_SD1_DATA3__USDHC1_DATA3	0x4000138e
			MX93_PAD_SD1_DATA4__USDHC1_DATA4	0x4000138e
			MX93_PAD_SD1_DATA5__USDHC1_DATA5	0x4000138e
			MX93_PAD_SD1_DATA6__USDHC1_DATA6	0x4000138e
			MX93_PAD_SD1_DATA7__USDHC1_DATA7	0x4000138e
			MX93_PAD_SD1_STROBE__USDHC1_STROBE	0x158e
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1-200mhzgrp {
		fsl,pins = <
			MX93_PAD_SD1_CLK__USDHC1_CLK		0x15fe
			MX93_PAD_SD1_CMD__USDHC1_CMD		0x400013fe
			MX93_PAD_SD1_DATA0__USDHC1_DATA0	0x400013fe
			MX93_PAD_SD1_DATA1__USDHC1_DATA1	0x400013fe
			MX93_PAD_SD1_DATA2__USDHC1_DATA2	0x400013fe
			MX93_PAD_SD1_DATA3__USDHC1_DATA3	0x400013fe
			MX93_PAD_SD1_DATA4__USDHC1_DATA4	0x400013fe
			MX93_PAD_SD1_DATA5__USDHC1_DATA5	0x400013fe
			MX93_PAD_SD1_DATA6__USDHC1_DATA6	0x400013fe
			MX93_PAD_SD1_DATA7__USDHC1_DATA7	0x400013fe
			MX93_PAD_SD1_STROBE__USDHC1_STROBE	0x15fe
		>;
	};

	pinctrl_reg_usdhc2_vmmc: regusdhc2vmmcgrp {
		fsl,pins = <
			MX93_PAD_SD2_RESET_B__GPIO3_IO07	0x31e
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2gpiogrp {
		fsl,pins = <
			MX93_PAD_SD2_CD_B__GPIO3_IO00		0x31e
		>;
	};

	pinctrl_usdhc2_gpio_sleep: usdhc2gpiogrpsleep {
		fsl,pins = <
			MX93_PAD_SD2_CD_B__GPIO3_IO00		0x51e
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX93_PAD_SD2_CLK__USDHC2_CLK		0x1582
			MX93_PAD_SD2_CMD__USDHC2_CMD		0x40001382
			MX93_PAD_SD2_DATA0__USDHC2_DATA0	0x40001382
			MX93_PAD_SD2_DATA1__USDHC2_DATA1	0x40001382
			MX93_PAD_SD2_DATA2__USDHC2_DATA2	0x40001382
			MX93_PAD_SD2_DATA3__USDHC2_DATA3	0x40001382
			MX93_PAD_SD2_VSELECT__USDHC2_VSELECT	0x51e
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2-100mhzgrp {
		fsl,pins = <
			MX93_PAD_SD2_CLK__USDHC2_CLK		0x158e
			MX93_PAD_SD2_CMD__USDHC2_CMD		0x4000138e
			MX93_PAD_SD2_DATA0__USDHC2_DATA0	0x4000138e
			MX93_PAD_SD2_DATA1__USDHC2_DATA1	0x4000138e
			MX93_PAD_SD2_DATA2__USDHC2_DATA2	0x4000138e
			MX93_PAD_SD2_DATA3__USDHC2_DATA3	0x4000138e
			MX93_PAD_SD2_VSELECT__USDHC2_VSELECT	0x51e
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2-200mhzgrp {
		fsl,pins = <
			MX93_PAD_SD2_CLK__USDHC2_CLK		0x15fe
			MX93_PAD_SD2_CMD__USDHC2_CMD		0x400013fe
			MX93_PAD_SD2_DATA0__USDHC2_DATA0	0x400013fe
			MX93_PAD_SD2_DATA1__USDHC2_DATA1	0x400013fe
			MX93_PAD_SD2_DATA2__USDHC2_DATA2	0x400013fe
			MX93_PAD_SD2_DATA3__USDHC2_DATA3	0x400013fe
			MX93_PAD_SD2_VSELECT__USDHC2_VSELECT	0x51e
		>;
	};

	pinctrl_usdhc2_sleep: usdhc2grpsleep {
		fsl,pins = <
			MX93_PAD_SD2_CLK__GPIO3_IO01		0x51e
			MX93_PAD_SD2_CMD__GPIO3_IO02		0x51e
			MX93_PAD_SD2_DATA0__GPIO3_IO03		0x51e
			MX93_PAD_SD2_DATA1__GPIO3_IO04		0x51e
			MX93_PAD_SD2_DATA2__GPIO3_IO05		0x51e
			MX93_PAD_SD2_DATA3__GPIO3_IO06		0x51e
			MX93_PAD_SD2_VSELECT__GPIO3_IO19	0x51e
		>;
	};

	pinctrl_usdhc3: usdhc3grp {
		fsl,pins = <
			MX93_PAD_SD3_CLK__USDHC3_CLK		0x1582
			MX93_PAD_SD3_CMD__USDHC3_CMD		0x40001382
			MX93_PAD_SD3_DATA0__USDHC3_DATA0	0x40001382
			MX93_PAD_SD3_DATA1__USDHC3_DATA1	0x40001382
			MX93_PAD_SD3_DATA2__USDHC3_DATA2	0x40001382
			MX93_PAD_SD3_DATA3__USDHC3_DATA3	0x40001382
		>;
	};

	pinctrl_usdhc3_100mhz: usdhc3-100mhzgrp {
		fsl,pins = <
			MX93_PAD_SD3_CLK__USDHC3_CLK		0x15be
			MX93_PAD_SD3_CMD__USDHC3_CMD		0x400013be
			MX93_PAD_SD3_DATA0__USDHC3_DATA0	0x400013be
			MX93_PAD_SD3_DATA1__USDHC3_DATA1	0x400013be
			MX93_PAD_SD3_DATA2__USDHC3_DATA2	0x400013be
			MX93_PAD_SD3_DATA3__USDHC3_DATA3	0x400013be
		>;
	};

	pinctrl_usdhc3_200mhz: usdhc3-200mhzgrp {
		fsl,pins = <
			MX93_PAD_SD3_CLK__USDHC3_CLK		0x15fe
			MX93_PAD_SD3_CMD__USDHC3_CMD		0x400013fe
			MX93_PAD_SD3_DATA0__USDHC3_DATA0	0x400013fe
			MX93_PAD_SD3_DATA1__USDHC3_DATA1	0x400013fe
			MX93_PAD_SD3_DATA2__USDHC3_DATA2	0x400013fe
			MX93_PAD_SD3_DATA3__USDHC3_DATA3	0x400013fe
		>;
	};

	pinctrl_usdhc3_sleep: usdhc3grpsleep {
		fsl,pins = <
			MX93_PAD_SD3_CLK__GPIO3_IO20		0x31e
			MX93_PAD_SD3_CMD__GPIO3_IO21		0x31e
			MX93_PAD_SD3_DATA0__GPIO3_IO22		0x31e
			MX93_PAD_SD3_DATA1__GPIO3_IO23		0x31e
			MX93_PAD_SD3_DATA2__GPIO3_IO24		0x31e
			MX93_PAD_SD3_DATA3__GPIO3_IO25		0x31e
		>;
	};

	pinctrl_usdhc3_wlan: usdhc3wlangrp {
		fsl,pins = <
			MX93_PAD_GPIO_IO27__GPIO2_IO27		0x31e
		>;
	};

	pinctrl_wakeup: wakeupgrp {
		fsl,pins = <
			MX93_PAD_ENET1_TD3__GPIO4_IO02		0x31e
			MX93_PAD_ENET1_TXC__GPIO4_IO07		0x31e
			MX93_PAD_ENET2_TD3__GPIO4_IO16		0x31e
		>;
	};
};